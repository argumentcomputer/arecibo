[package]
name = "arecibo"
version = "0.2.0"
authors = ["Srinath Setty <srinath@microsoft.com>", "Lurk Engineering <engineering@lurk-lab.com>"]
edition = "2021"
description = "Recursive zkSNARKs without trusted setup"
documentation = "https://docs.rs/arecibo/"
readme = "README.md"
repository = "https://github.com/lurk-lab/arecibo"
license-file = "LICENSE"
keywords = ["zkSNARKs", "cryptography", "proofs"]
rust-version="1.70.0"

[dependencies]
bellpepper-core = { git="https://github.com/lurk-lab/bellpepper", branch="dev", default-features = false }
bellpepper = { git="https://github.com/lurk-lab/bellpepper", branch="dev", default-features = false }
ff = { version = "0.13.0", features = ["derive"] }
digest = "0.10"
sha3 = "0.10"
rayon = "1.7"
rand_core = { version = "0.6", default-features = false }
rand_chacha = "0.3"
subtle = "2.5"
pasta_curves = { git = "https://github.com/lurk-lab/pasta_curves", branch="dev", features = ["repr-c", "serde"] }
neptune = { git = "https://github.com/lurk-lab/neptune", branch="dev", default-features = false, features = ["abomonation"] }
generic-array = "1.0.0"
num-bigint = { version = "0.4", features = ["serde", "rand"] }
num-traits = "0.2"
num-integer = "0.1"
serde = { version = "1.0", features = ["derive"] }
bincode = "1.3"
bitvec = "1.0"
byteorder = "1.4.3"
thiserror = "1.0"
group = "0.13.0"
pairing = "0.23.0"
abomonation = "0.7.3"
abomonation_derive = { version = "0.1.0", package = "abomonation_derive_ng" }
tap = "1.0.1"
tracing = "0.1.37"
tracing-texray = "0.2.0"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
cfg-if = "1.0.0"
once_cell = "1.18.0"
itertools = "0.12.0"
rand = "0.8.5"
ref-cast = "1.0.20"
derive_more = "0.99.17"

[target.'cfg(any(target_arch = "x86_64", target_arch = "aarch64"))'.dependencies]
pasta-msm = { git = "https://github.com/lurk-lab/pasta-msm", branch = "dev", version = "0.1.4" }
# pasta-msm also calls into sppark, which defines the same common sorting code this crate would: 
# the `dont-implement-sort` feature avoids creating conflicting symbols.
grumpkin-msm = { git = "https://github.com/lurk-lab/grumpkin-msm", branch = "dev", features = ["dont-implement-sort"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
halo2curves = { version = "0.5.0", features = ["bits", "derive_serde", "multicore"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# see https://github.com/rust-random/rand/pull/948
getrandom = { version = "0.2.0", default-features = false, features = ["js"] }
# bypass the default "multicore" feature
halo2curves = { version = "0.5.0", default-features = false, features = ["bits", "derive_serde"] }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
flate2 = "1.0"
hex = "0.4.3"
pprof = { version = "0.13" }
sha2 = "0.10.7"
tracing-test = "0.2.4"
proptest = "1.2.0"
expect-test = "1.4.1"

[[bench]]
name = "recursive-snark"
harness = false

[[bench]]
name = "compressed-snark"
harness = false

[[bench]]
name = "compute-digest"
harness = false

[[bench]]
name = "sha256"
harness = false

[[bench]]
name = "recursive-snark-supernova"
harness = false

[[bench]]
name = "compressed-snark-supernova"
harness = false

[[bench]]
name = "pcs"
harness = false

[features]
default = []
abomonate = []
asm = ["halo2curves/asm"]
bench = []
# Compiles in portable mode, w/o ISA extensions => binary can be executed on all systems.
portable = ["pasta-msm/portable"]
cuda = ["neptune/cuda", "neptune/pasta", "neptune/arity24"]
opencl = ["neptune/opencl", "neptune/pasta", "neptune/arity24"]
flamegraph = ["pprof/flamegraph", "pprof/criterion"]

# This is needed to ensure halo2curves, which imports pasta-curves, uses the *same* traits in bn256_grumpkin
[patch.crates-io]
pasta_curves = { git = "https://github.com/lurk-lab/pasta_curves", branch = "dev" }

[profile.dev-ci]
inherits = "dev"
# By compiling dependencies with optimizations, performing tests gets much faster.
opt-level = 3
lto = "thin"
incremental = false
codegen-units = 16
